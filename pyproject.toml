[project]
name = "vet-clinic-api"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "alembic>=1.14.1",
    "bcrypt>=4.2.1",
    "fastapi[standard]>=0.115.8",
    "ignr>=2.2",
    "passlib[bycript]>=1.7.4",
    "pika>=1.3.2",
    "python-jose[cryptography]>=3.3.0",
    "redis>=5.2.1",
    "sqlmodel>=0.0.22",
    "taskipy>=1.14.1",
]

[dependency-groups]
dev = [
    "ruff>=0.9.4",
]


[tool.ruff]
# Define a vers√£o do Python usada no projeto
target-version = "py313"  # üî• Altere para sua vers√£o do Python

# Ativar apenas algumas regras espec√≠ficas do Ruff
select = ["E", "F", "I", "N", "W", "UP", "B", "C90"]

# Ativar formata√ß√£o autom√°tica (como o Black)
line-length = 88  # üî• Define o limite de caracteres por linha

# Ignorar algumas regras espec√≠ficas (caso necess√°rio)
ignore = ["E501"]  # Ignora erro de linha longa (caso prefira)

[tool.ruff.format]
# Formata√ß√£o similar ao Black
quote-style = "double"  # Usar aspas duplas em strings
indent-style = "space"
line-ending = "lf"




[tool.taskipy.tasks]
#  Tarefa para rodar o servidor FastAPI
run = "uvicorn main:app --reload"

#  Rodar o Ruff para verificar erros no c√≥digo
lint = "ruff check ."

#  Corrigir automaticamente os erros encontrados pelo Ruff
format = "ruff check . --fix"

#  Rodar os testes com pytest
test = "pytest -v"

#  Criar uma nova migration automaticamente
migrate = "alembic revision --autogenerate -m"

#  Aplicar as migrations no banco de dados
upgrade = "alembic upgrade head"

#  Rodar tudo de uma vez (Lint + Testes + Formata√ß√£o)
all = "task lint && task format && task test"
